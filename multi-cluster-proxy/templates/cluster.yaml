{{- range $idx, $val := .Values.clusters }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cluster{{ $idx | printf "%03d" }}-config
data:
  nginx.conf: |
    user nginx;
    worker_processes  auto;
    events {
      worker_connections  10240;
    }

    error_log /var/log/nginx/error.log error;

    http {
      proxy_ssl_certificate         /ssl/client01.crt;
      proxy_ssl_certificate_key     /ssl/client01.key;

      map $remote_addr $lb { 
        default {{ . }};
      }

      resolver {{ $.Values.dns }} valid=30s ipv6=off;

      server {
        listen 80;
        location / {
          proxy_pass https://$lb:20000;
          proxy_set_header Host $host;
        }
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cluster{{ $idx | printf "%03d" }}
spec:
  selector:
    matchLabels:
      app: cluster{{ $idx | printf "%03d" }}
  replicas: 1
  template:
    metadata:
      labels:
        app: cluster{{ $idx | printf "%03d" }}
        component: client
        version: {{ $.Values.version | quote }}
    spec:
      containers:
      - name: nginx
        image: nginx:1.17
        volumeMounts:
        - mountPath: /etc/nginx
          readOnly: true
          name: nginx-config
        - mountPath: /ssl
          readOnly: true
          name: nginx-certs
      volumes:
      - name: nginx-config
        configMap:
          name: cluster{{ $idx | printf "%03d" }}-config
      - name: nginx-certs
        configMap:
          name: cluster-certs
---
apiVersion: v1
kind: Service
metadata:
  name: cluster{{ $idx | printf "%03d" }}
  labels:
    app: cluster{{ $idx | printf "%03d" }}
spec:
  type: ClusterIP
  ports:
  - name: proxy
    port: 80
    protocol: TCP
  selector:
    app: cluster{{ $idx | printf "%03d" }}
{{- end}}