apiVersion: v1
kind: ConfigMap
metadata:
  name: master-config
data:
  nginx.conf: |
    user nginx;
    worker_processes  auto;
    events {
      worker_connections  10240;
    }

    error_log /var/log/nginx/error.log error;

    http {
      server_tokens off;
      ssl_protocols TLSv1.3;

      ssl_certificate /ssl/server.crt;
      ssl_certificate_key /ssl/server.key;

      ssl_client_certificate /ssl/ca.crt;
      ssl_verify_client on;

      map $host $web_proxy_host {
        "~^(?<x_shema>http|https)(?<x_port>[0-9]+).(?<x_proxy_host>.*).(global|cluster[0-9]+)$" $x_proxy_host;
      }
      map $host $web_proxy_port {
        "~^(?<x_shema>http|https)(?<x_port>[0-9]+).(?<x_proxy_host>.*).(global|cluster[0-9]+)$" $x_port;
      }
      map $host $web_proxy_shema {
        "~^(?<x_shema>http|https)(?<x_port>[0-9]+).(?<x_proxy_host>.*).(global|cluster[0-9]+)$" $x_shema;
      }
      
      resolver {{ .Values.dns }} valid=30s ipv6=off;

      server {
        listen 20000 ssl http2;

        location / {
          proxy_pass $web_proxy_shema://$web_proxy_host:$web_proxy_port;

          set $web_proxy_header_host $host;

          if ($http_x_host) {
            set $web_proxy_header_host $http_x_host;
          }

          proxy_set_header Host $web_proxy_header_host;
        }
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: master-proxy
spec:
  selector:
    matchLabels:
      app: master-proxy
  replicas: 1
  template:
    metadata:
      labels:
        app: master-proxy
        component: master
        version: {{ $.Values.version | quote }}
    spec:
      containers:
      - name: nginx
        image: nginx:1.17
        resources:
{{ toYaml .Values.master.resources | indent 9 }}
        volumeMounts:
        - mountPath: /etc/nginx
          readOnly: true
          name: nginx-config
        - mountPath: /ssl
          readOnly: true
          name: nginx-certs
      volumes:
      - name: nginx-config
        configMap:
          name: master-config
      - name: nginx-certs
        configMap:
          name: master-certs
---
apiVersion: v1
kind: Service
metadata:
  name: master-proxy
  labels:
    app: master-proxy
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
spec:
  type: LoadBalancer
  #externalTrafficPolicy: Local
  ports:
  - name: proxy
    port: 20000
    protocol: TCP
  selector:
    app: master-proxy
---
apiVersion: v1
kind: Service
metadata:
  name: cluster-global
  labels:
    component: client
spec:
  type: ClusterIP
  ports:
  - name: proxy
    port: 80
    protocol: TCP
  selector:
    component: client